메세지 컨버터
기본값은 JSON
스프링에 기본적으로 탑재되어 있음

8bit=> 256가지의 문자 전송이 가능함
1byte=한 문자씩 받을 수 있는 단위(통신의 최소 단위)

inputstream
(바이트)
새로운 클래스 InputStreamReader 에서 배열로 여러개의 문자를 받음(배열 크기 선언때문에 안쓴다)
BufferedReader(jsp 에서는 out 내장객체)를 사용하여 가변적으로 문자를 받는다.(보낼때는 Printwriter를 사용한다)

@ResponseBody -> Buffered writer
@RequestBody  -> Buffered Reader

============================================================================================================================================================================================================
JPA
자바의 자료를 영구히 기록하기 위한 환경
자바 프로그램을 할 때 영구적으로 데이터를 저장하기 위해 필요한 인터페이스

API
인터페이스를 통해 프로그래밍 하여 프로그램을 만드는 것

인터페이스
규칙, 해당 기능을 사용하고 싶다면 따라야하는 규칙을 지님
상하관계가 존재하는 약속

포로토콜
동등한 위치의 약속

persistence 영구히 기록되는 것
DBMS (하드웨어의 일부를 사용하여 기록)

============================================================================================================================================================================================================
 
ORM
JPA 가 가지고 있는 인터페이스를 통해 자바 클래스에서 
DB 테이블을 생성할 수 있는 기능

모델링
추상적인 개념을 현실로 뽑아내는 것.

Input 
자바에서 DB에 값을 넣는 것
DML

output
Select
자바에서 DB 값을 가져오는 것

자바와 DB의 데이터 타입이 서로 다르다

TRM
테이블을 통한 관계
DB생성
자바 클래스 생성


JPA 는 반복적인 CRUD 작업을 줄여준다
단순 반복 작업
1.자바에서 DB요청(확인 후 세션 오픈)
2.자바에서 connection 획득
3.쿼리 전송이 가능함(자바->DB)
4.DB가 작업 후 다시 보내준다
5.자바에서 자바 오브젝트로 변경해줌(JSON처럼)
=> JPA를 통해 줄일 수 있음(함수 하나로 제공)

============================================================================================================================================================================================================
영속성 컨텍스트
자바가 db에 데이터를 저장하기 위한 모든 것
(DB와 동기화가 가능하여 CONTEXT에서 삭제하면 DB에서도 삭제된다)
같은 데이터인데 하나라도 달라지면 UPDATE가 일어난다(INSERT가 아닌)

컨텍스트
대상에 대한 모든 정보를 지니고 있는 것(어디든 접근이 가능하다)
데이터를 일치시켜주는 역할을 한다

ORM
자바가 주도권을 지닌채로 모델링이 가능하다
(OBJECT 값을 넣어줄 수 있다=DB에 객체 저장)


